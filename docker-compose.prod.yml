version: "3.9"

name: yolonereus-prod

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: yn-frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
    expose:
      - "3000"
    networks:
      - yolonereus

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: yn-backend
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    expose:
      - "9000"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - yolonereus

  python:
    build:
      context: ./python
      dockerfile: Dockerfile.prod
    container_name: yn-python
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    expose:
      - "8001"
    depends_on:
      - redis
      - minio
    networks:
      - yolonereus

  postgres:
    image: postgres:16
    container_name: yn-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - yolonereus

  redis:
    image: redis:7-alpine
    container_name: yn-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks:
      - yolonereus

  minio:
    image: minio/minio:RELEASE.2024-09-13T20-26-02Z
    container_name: yn-minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    networks:
      - yolonereus

volumes:
  pgdata:
  redisdata:
  minio:

networks:
  yolonereus:
    driver: bridge
