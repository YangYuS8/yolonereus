version: "3.9"

name: yolonereus-dev

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: yn-frontend-dev
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:rw
    depends_on:
      - backend
    networks:
      - yolonereus

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: yn-backend-dev
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app:rw
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - yolonereus

  python:
    build:
      context: ./python
      dockerfile: Dockerfile.dev
    container_name: yn-python-dev
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    ports:
      - "8001:8001"
    volumes:
      - ./python:/app:rw
    depends_on:
      - redis
      - minio
    networks:
      - yolonereus

  postgres:
    image: postgres:16
    container_name: yn-postgres-dev
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    networks:
      - yolonereus

  redis:
    image: redis:7-alpine
    container_name: yn-redis-dev
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata_dev:/data
    networks:
      - yolonereus

  minio:
    image: minio/minio:RELEASE.2024-09-13T20-26-02Z
    container_name: yn-minio-dev
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev:/data
    networks:
      - yolonereus

volumes:
  pgdata_dev:
  redisdata_dev:
  minio_dev:

networks:
  yolonereus:
    driver: bridge
